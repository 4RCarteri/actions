name: SQL Lint and Fix

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
permissions:
  pull-requests: write
  checks: write
  contents: read

jobs:
  resolve-comment:
    name: "Auto Resolve Comment"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install requests

      - name: Resolve Bot Comments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          python <<EOF
          import os
          import requests

          token = os.environ["GITHUB_TOKEN"]
          repo = os.environ["REPO"]
          pr_number = os.environ.get("PR_NUMBER")

          # Get PR review threads via GraphQL
          query = """
          query($owner: String!, $name: String!, $number: Int!, $after: String) {
            repository(owner: $owner, name: $name) {
              pullRequest(number: $number) {
                reviewThreads(first: 100, after: $after) {
                  pageInfo {
                    hasNextPage
                    endCursor
                  }
                  nodes {
                    id
                    comments(first: 1) {
                      nodes {
                        author {
                          login
                        }
                      }
                    }
                    isResolved
                  }
                }
              }
            }
          }
          """

          owner, name = repo.split("/")
          after = None
          thread_ids = []
          headers = {"Authorization": f"Bearer {token}"}
          while True:
              variables = {"owner": owner, "name": name, "number": int(pr_number), "after": after}
              res = requests.post(
                  "https://api.github.com/graphql",
                  json={"query": query, "variables": variables},
                  headers=headers,
              )
              data = res.json()
              threads = data["data"]["repository"]["pullRequest"]["reviewThreads"]["nodes"]
              for thread in threads:
                  author = thread["comments"]["nodes"][0]["author"]["login"]
                  if author == "github-action" and not thread["isResolved"]:
                      thread_ids.append(thread["id"])
              page = data["data"]["repository"]["pullRequest"]["reviewThreads"]["pageInfo"]
              if page["hasNextPage"]:
                  after = page["endCursor"]
              else:
                  break

          # Resolve threads
          mutation = """
          mutation($id: ID!) {
            resolveReviewThread(input: {threadId: $id}) {
              thread {
                isResolved
              }
            }
          }
          """
          for thread_id in thread_ids:
              requests.post(
                  "https://api.github.com/graphql",
                  json={"query": mutation, "variables": {"id": thread_id}},
                  headers=headers,
              )

          print(f"Resolved {len(thread_ids)} threads created by github-action bot.")
          EOF
  fix-check:
    name: sqlfluff fix
    runs-on: ubuntu-latest
    needs: resolve-comment
    steps:
      - uses: actions/checkout@v4
      - uses: yu-iskw/action-sqlfluff@v5
        id: fix-sql
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          sqlfluff_version: "3.4.2"
          sqlfluff_command: "fix" # Or "lint"
          config: "${{ github.workspace }}/.sqlfluff"
          paths: "${{ github.workspace }}/Databases/**"
          level: "info"
          reviewdog_version: "v0.20.3"
          dialect: "tsql"
          fail_on_error: "true"
  lint-check:
    name: sqlfluff lint
    runs-on: ubuntu-latest
    needs: resolve-comment
    steps:
      - uses: actions/checkout@v4
      - uses: yu-iskw/action-sqlfluff@v5
        id: lint-sql
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          sqlfluff_version: "3.4.2"
          sqlfluff_command: "lint" # Or "lint"
          config: "${{ github.workspace }}/.sqlfluff"
          paths: "${{ github.workspace }}/Databases/**"
          level: "error"
          reviewdog_version: "v0.20.3"
          dialect: "tsql"
          fail_on_error: "true"
